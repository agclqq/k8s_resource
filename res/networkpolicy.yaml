apiVersion: placeholder	#<string>	false
	#APIVersion defines the versioned schema of this representation of an
	#object. Servers should convert recognized schemas to the latest internal
	#value, and may reject unrecognized values. More info:
	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
kind: placeholder	#<string>	false
	#Kind is a string value representing the REST resource this object
	#represents. Servers may infer this from the endpoint the client submits
	#requests to. Cannot be updated. In CamelCase. More info:
	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
metadata: 	#<Object>	false
	#Standard object's metadata. More info:
	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    annotations: 	#<map[string]string>	false
        placeholder: placeholder
    	#Annotations is an unstructured key value map stored with a resource that
    	#may be set by external tools to store and retrieve arbitrary metadata. They
    	#are not queryable and should be preserved when modifying objects. More
    	#info: http://kubernetes.io/docs/user-guide/annotations
    clusterName: placeholder	#<string>	false
    	#The name of the cluster which the object belongs to. This is used to
    	#distinguish resources with same name and namespace in different clusters.
    	#This field is not set anywhere right now and apiserver is going to ignore
    	#it if set in create or update request.
    creationTimestamp: placeholder	#<string>	false
    	#CreationTimestamp is a timestamp representing the server time when this
    	#object was created. It is not guaranteed to be set in happens-before order
    	#across separate operations. Clients may not set this value. It is
    	#represented in RFC3339 form and is in UTC.
    	#Populated by the system. Read-only. Null for lists. More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    deletionGracePeriodSeconds: 0	#<integer>	false
    	#Number of seconds allowed for this object to gracefully terminate before it
    	#will be removed from the system. Only set when deletionTimestamp is also
    	#set. May only be shortened. Read-only.
    deletionTimestamp: placeholder	#<string>	false
    	#DeletionTimestamp is RFC 3339 date and time at which this resource will be
    	#deleted. This field is set by the server when a graceful deletion is
    	#requested by the user, and is not directly settable by a client. The
    	#resource is expected to be deleted (no longer visible from resource lists,
    	#and not reachable by name) after the time in this field, once the
    	#finalizers list is empty. As long as the finalizers list contains items,
    	#deletion is blocked. Once the deletionTimestamp is set, this value may not
    	#be unset or be set further into the future, although it may be shortened or
    	#the resource may be deleted prior to this time. For example, a user may
    	#request that a pod is deleted in 30 seconds. The Kubelet will react by
    	#sending a graceful termination signal to the containers in the pod. After
    	#that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)
    	#to the container and after cleanup, remove the pod from the API. In the
    	#presence of network partitions, this object may still exist after this
    	#timestamp, until an administrator or automated process can determine the
    	#resource is fully terminated. If not set, graceful deletion of the object
    	#has not been requested.
    	#Populated by the system when a graceful deletion is requested. Read-only.
    	#More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    finalizers: 	#<[]string>	false
        - placeholder
    	#Must be empty before the object is deleted from the registry. Each entry is
    	#an identifier for the responsible component that will remove the entry from
    	#the list. If the deletionTimestamp of the object is non-nil, entries in
    	#this list can only be removed. Finalizers may be processed and removed in
    	#any order. Order is NOT enforced because it introduces significant risk of
    	#stuck finalizers. finalizers is a shared field, any actor with permission
    	#can reorder it. If the finalizer list is processed in order, then this can
    	#lead to a situation in which the component responsible for the first
    	#finalizer in the list is waiting for a signal (field value, external
    	#system, or other) produced by a component responsible for a finalizer later
    	#in the list, resulting in a deadlock. Without enforced ordering finalizers
    	#are free to order amongst themselves and are not vulnerable to ordering
    	#changes in the list.
    generateName: placeholder	#<string>	false
    	#GenerateName is an optional prefix, used by the server, to generate a
    	#unique name ONLY IF the Name field has not been provided. If this field is
    	#used, the name returned to the client will be different than the name
    	#passed. This value will also be combined with a unique suffix. The provided
    	#value has the same validation rules as the Name field, and may be truncated
    	#by the length of the suffix required to make the value unique on the
    	#server.
    	#If this field is specified and the generated name exists, the server will
    	#NOT return a 409 - instead, it will either return 201 Created or 500 with
    	#Reason ServerTimeout indicating a unique name could not be found in the
    	#time allotted, and the client should retry (optionally after the time
    	#indicated in the Retry-After header).
    	#Applied only if Name is not specified. More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
    generation: 0	#<integer>	false
    	#A sequence number representing a specific generation of the desired state.
    	#Populated by the system. Read-only.
    labels: 	#<map[string]string>	false
        placeholder: placeholder
    	#Map of string keys and values that can be used to organize and categorize
    	#(scope and select) objects. May match selectors of replication controllers
    	#and services. More info: http://kubernetes.io/docs/user-guide/labels
    managedFields: 	#<[]Object>	false
    	#ManagedFields maps workflow-id and version to the set of fields that are
    	#managed by that workflow. This is mostly for internal housekeeping, and
    	#users typically shouldn't need to set or understand this field. A workflow
    	#can be the user's name, a controller's name, or the name of a specific
    	#apply path like "ci-cd". The set of fields is always in the version that
    	#the workflow used when modifying the object.
        - apiVersion: placeholder	#<string>	false
        	#APIVersion defines the version of this resource that this field set applies
        	#to. The format is "group/version" just like the top-level APIVersion field.
        	#It is necessary to track the version of a field set because it cannot be
        	#automatically converted.
          fieldsType: placeholder	#<string>	false
        	#FieldsType is the discriminator for the different fields format and
        	#version. There is currently only one possible value: "FieldsV1"
          fieldsV1: 	#<map[string]>	false
            placeholder: placeholder
        	#FieldsV1 holds the first JSON version format as described in the "FieldsV1"
        	#type.
          manager: placeholder	#<string>	false
        	#Manager is an identifier of the workflow managing these fields.
          operation: placeholder	#<string>	false
        	#Operation is the type of operation which lead to this ManagedFieldsEntry
        	#being created. The only valid values for this field are 'Apply' and
        	#'Update'.
          subresource: placeholder	#<string>	false
        	#Subresource is the name of the subresource used to update that object, or
        	#empty string if the object was updated through the main resource. The value
        	#of this field is used to distinguish between managers, even if they share
        	#the same name. For example, a status update will be distinct from a regular
        	#update using the same manager name. Note that the APIVersion field is not
        	#related to the Subresource field and it always corresponds to the version
        	#of the main resource.
          time: placeholder	#<string>	false
        	#Time is timestamp of when these fields were set. It should always be empty
        	#if Operation is 'Apply'
    name: placeholder	#<string>	false
    	#Name must be unique within a namespace. Is required when creating
    	#resources, although some resources may allow a client to request the
    	#generation of an appropriate name automatically. Name is primarily intended
    	#for creation idempotence and configuration definition. Cannot be updated.
    	#More info: http://kubernetes.io/docs/user-guide/identifiers#names
    namespace: placeholder	#<string>	false
    	#Namespace defines the space within which each name must be unique. An empty
    	#namespace is equivalent to the "default" namespace, but "default" is the
    	#canonical representation. Not all objects are required to be scoped to a
    	#namespace - the value of this field for those objects will be empty.
    	#Must be a DNS_LABEL. Cannot be updated. More info:
    	#http://kubernetes.io/docs/user-guide/namespaces
    ownerReferences: 	#<[]Object>	false
    	#List of objects depended by this object. If ALL objects in the list have
    	#been deleted, this object will be garbage collected. If this object is
    	#managed by a controller, then an entry in this list will point to this
    	#controller, with the controller field set to true. There cannot be more
    	#than one managing controller.
        - apiVersion: placeholder	#<string> -required-	false
        	#API version of the referent.
          blockOwnerDeletion: false	#<boolean>	false
        	#If true, AND if the owner has the "foregroundDeletion" finalizer, then the
        	#owner cannot be deleted from the key-value store until this reference is
        	#removed. Defaults to false. To set this field, a user needs "delete"
        	#permission of the owner, otherwise 422 (Unprocessable Entity) will be
        	#returned.
          controller: false	#<boolean>	false
        	#If true, this reference points to the managing controller.
          kind: placeholder	#<string> -required-	false
        	#Kind of the referent. More info:
        	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          name: placeholder	#<string> -required-	false
        	#Name of the referent. More info:
        	#http://kubernetes.io/docs/user-guide/identifiers#names
          uid: placeholder	#<string> -required-	false
        	#UID of the referent. More info:
        	#http://kubernetes.io/docs/user-guide/identifiers#uids
    resourceVersion: placeholder	#<string>	false
    	#An opaque value that represents the internal version of this object that
    	#can be used by clients to determine when objects have changed. May be used
    	#for optimistic concurrency, change detection, and the watch operation on a
    	#resource or set of resources. Clients must treat these values as opaque and
    	#passed unmodified back to the server. They may only be valid for a
    	#particular resource or set of resources.
    	#Populated by the system. Read-only. Value must be treated as opaque by
    	#clients and . More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    selfLink: placeholder	#<string>	false
    	#SelfLink is a URL representing this object. Populated by the system.
    	#Read-only.
    	#DEPRECATED Kubernetes will stop propagating this field in 1.20 release and
    	#the field is planned to be removed in 1.21 release.
    uid: placeholder	#<string>	false
    	#UID is the unique in time and space value for this object. It is typically
    	#generated by the server on successful creation of a resource and is not
    	#allowed to change on PUT operations.
    	#Populated by the system. Read-only. More info:
    	#http://kubernetes.io/docs/user-guide/identifiers#uids
spec: 	#<Object>	false
	#Specification of the desired behavior for this NetworkPolicy.
    egress: 	#<[]Object>	false
    	#List of egress rules to be applied to the selected pods. Outgoing traffic
    	#is allowed if there are no NetworkPolicies selecting the pod (and cluster
    	#policy otherwise allows the traffic), OR if the traffic matches at least
    	#one egress rule across all of the NetworkPolicy objects whose podSelector
    	#matches the pod. If this field is empty then this NetworkPolicy limits all
    	#outgoing traffic (and serves solely to ensure that the pods it selects are
    	#isolated by default). This field is beta-level in 1.8
        - ports: 	#<[]Object>	false
        	#List of destination ports for outgoing traffic. Each item in this list is
        	#combined using a logical OR. If this field is empty or missing, this rule
        	#matches all ports (traffic not restricted by port). If this field is
        	#present and contains at least one item, then this rule allows traffic only
        	#if the traffic matches at least one port in the list.
            - endPort: 0	#<integer>	false
            	#If set, indicates that the range of ports from port to endPort, inclusive,
            	#should be allowed by the policy. This field cannot be defined if the port
            	#field is not defined or if the port field is defined as a named (string)
            	#port. The endPort must be equal or greater than port. This feature is in
            	#Beta state and is enabled by default. It can be disabled using the Feature
            	#Gate "NetworkPolicyEndPort".
              port: placeholder	#<string>	false
            	#The port on the given protocol. This can either be a numerical or named
            	#port on a pod. If this field is not provided, this matches all port names
            	#and numbers. If present, only traffic on the specified protocol AND port
            	#will be matched.
              protocol: placeholder	#<string>	false
            	#The protocol (TCP, UDP, or SCTP) which traffic must match. If not
            	#specified, this field defaults to TCP.
          to: 	#<[]Object>	false
        	#List of destinations for outgoing traffic of pods selected for this rule.
        	#Items in this list are combined using a logical OR operation. If this field
        	#is empty or missing, this rule matches all destinations (traffic not
        	#restricted by destination). If this field is present and contains at least
        	#one item, this rule allows traffic only if the traffic matches at least one
        	#item in the to list.
            - ipBlock: 	#<Object>	false
            	#IPBlock defines policy on a particular IPBlock. If this field is set then
            	#neither of the other fields can be.
                cidr: placeholder	#<string> -required-	false
                	#CIDR is a string representing the IP Block Valid examples are
                	#"192.168.1.1/24" or "2001:db9::/64"
                except: 	#<[]string>	false
                    - placeholder
                	#Except is a slice of CIDRs that should not be included within an IP Block
                	#Valid examples are "192.168.1.1/24" or "2001:db9::/64" Except values will
                	#be rejected if they are outside the CIDR range
              namespaceSelector: 	#<Object>	false
            	#Selects Namespaces using cluster-scoped labels. This field follows standard
            	#label selector semantics; if present but empty, it selects all namespaces.
            	#If PodSelector is also set, then the NetworkPolicyPeer as a whole selects
            	#the Pods matching PodSelector in the Namespaces selected by
            	#NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected
            	#by NamespaceSelector.
                matchExpressions: 	#<[]Object>	false
                	#matchExpressions is a list of label selector requirements. The requirements
                	#are ANDed.
                    - key: placeholder	#<string> -required-	false
                    	#key is the label key that the selector applies to.
                      operator: placeholder	#<string> -required-	false
                    	#operator represents a key's relationship to a set of values. Valid
                    	#operators are In, NotIn, Exists and DoesNotExist.
                      values: 	#<[]string>	false
                        - placeholder
                    	#values is an array of string values. If the operator is In or NotIn, the
                    	#values array must be non-empty. If the operator is Exists or DoesNotExist,
                    	#the values array must be empty. This array is replaced during a strategic
                    	#merge patch.
                matchLabels: 	#<map[string]string>	false
                    placeholder: placeholder
                	#matchLabels is a map of {key,value} pairs. A single {key,value} in the
                	#matchLabels map is equivalent to an element of matchExpressions, whose key
                	#field is "key", the operator is "In", and the values array contains only
                	#"value". The requirements are ANDed.
              podSelector: 	#<Object>	false
            	#This is a label selector which selects Pods. This field follows standard
            	#label selector semantics; if present but empty, it selects all pods.
            	#If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole
            	#selects the Pods matching PodSelector in the Namespaces selected by
            	#NamespaceSelector. Otherwise it selects the Pods matching PodSelector in
            	#the policy's own Namespace.
                matchExpressions: 	#<[]Object>	false
                	#matchExpressions is a list of label selector requirements. The requirements
                	#are ANDed.
                    - key: placeholder	#<string> -required-	false
                    	#key is the label key that the selector applies to.
                      operator: placeholder	#<string> -required-	false
                    	#operator represents a key's relationship to a set of values. Valid
                    	#operators are In, NotIn, Exists and DoesNotExist.
                      values: 	#<[]string>	false
                        - placeholder
                    	#values is an array of string values. If the operator is In or NotIn, the
                    	#values array must be non-empty. If the operator is Exists or DoesNotExist,
                    	#the values array must be empty. This array is replaced during a strategic
                    	#merge patch.
                matchLabels: 	#<map[string]string>	false
                    placeholder: placeholder
                	#matchLabels is a map of {key,value} pairs. A single {key,value} in the
                	#matchLabels map is equivalent to an element of matchExpressions, whose key
                	#field is "key", the operator is "In", and the values array contains only
                	#"value". The requirements are ANDed.
    ingress: 	#<[]Object>	false
    	#List of ingress rules to be applied to the selected pods. Traffic is
    	#allowed to a pod if there are no NetworkPolicies selecting the pod (and
    	#cluster policy otherwise allows the traffic), OR if the traffic source is
    	#the pod's local node, OR if the traffic matches at least one ingress rule
    	#across all of the NetworkPolicy objects whose podSelector matches the pod.
    	#If this field is empty then this NetworkPolicy does not allow any traffic
    	#(and serves solely to ensure that the pods it selects are isolated by
    	#default)
        - from: 	#<[]Object>	false
        	#List of sources which should be able to access the pods selected for this
        	#rule. Items in this list are combined using a logical OR operation. If this
        	#field is empty or missing, this rule matches all sources (traffic not
        	#restricted by source). If this field is present and contains at least one
        	#item, this rule allows traffic only if the traffic matches at least one
        	#item in the from list.
            - ipBlock: 	#<Object>	false
            	#IPBlock defines policy on a particular IPBlock. If this field is set then
            	#neither of the other fields can be.
                cidr: placeholder	#<string> -required-	false
                	#CIDR is a string representing the IP Block Valid examples are
                	#"192.168.1.1/24" or "2001:db9::/64"
                except: 	#<[]string>	false
                    - placeholder
                	#Except is a slice of CIDRs that should not be included within an IP Block
                	#Valid examples are "192.168.1.1/24" or "2001:db9::/64" Except values will
                	#be rejected if they are outside the CIDR range
              namespaceSelector: 	#<Object>	false
            	#Selects Namespaces using cluster-scoped labels. This field follows standard
            	#label selector semantics; if present but empty, it selects all namespaces.
            	#If PodSelector is also set, then the NetworkPolicyPeer as a whole selects
            	#the Pods matching PodSelector in the Namespaces selected by
            	#NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected
            	#by NamespaceSelector.
                matchExpressions: 	#<[]Object>	false
                	#matchExpressions is a list of label selector requirements. The requirements
                	#are ANDed.
                    - key: placeholder	#<string> -required-	false
                    	#key is the label key that the selector applies to.
                      operator: placeholder	#<string> -required-	false
                    	#operator represents a key's relationship to a set of values. Valid
                    	#operators are In, NotIn, Exists and DoesNotExist.
                      values: 	#<[]string>	false
                        - placeholder
                    	#values is an array of string values. If the operator is In or NotIn, the
                    	#values array must be non-empty. If the operator is Exists or DoesNotExist,
                    	#the values array must be empty. This array is replaced during a strategic
                    	#merge patch.
                matchLabels: 	#<map[string]string>	false
                    placeholder: placeholder
                	#matchLabels is a map of {key,value} pairs. A single {key,value} in the
                	#matchLabels map is equivalent to an element of matchExpressions, whose key
                	#field is "key", the operator is "In", and the values array contains only
                	#"value". The requirements are ANDed.
              podSelector: 	#<Object>	false
            	#This is a label selector which selects Pods. This field follows standard
            	#label selector semantics; if present but empty, it selects all pods.
            	#If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole
            	#selects the Pods matching PodSelector in the Namespaces selected by
            	#NamespaceSelector. Otherwise it selects the Pods matching PodSelector in
            	#the policy's own Namespace.
                matchExpressions: 	#<[]Object>	false
                	#matchExpressions is a list of label selector requirements. The requirements
                	#are ANDed.
                    - key: placeholder	#<string> -required-	false
                    	#key is the label key that the selector applies to.
                      operator: placeholder	#<string> -required-	false
                    	#operator represents a key's relationship to a set of values. Valid
                    	#operators are In, NotIn, Exists and DoesNotExist.
                      values: 	#<[]string>	false
                        - placeholder
                    	#values is an array of string values. If the operator is In or NotIn, the
                    	#values array must be non-empty. If the operator is Exists or DoesNotExist,
                    	#the values array must be empty. This array is replaced during a strategic
                    	#merge patch.
                matchLabels: 	#<map[string]string>	false
                    placeholder: placeholder
                	#matchLabels is a map of {key,value} pairs. A single {key,value} in the
                	#matchLabels map is equivalent to an element of matchExpressions, whose key
                	#field is "key", the operator is "In", and the values array contains only
                	#"value". The requirements are ANDed.
          ports: 	#<[]Object>	false
        	#List of ports which should be made accessible on the pods selected for this
        	#rule. Each item in this list is combined using a logical OR. If this field
        	#is empty or missing, this rule matches all ports (traffic not restricted by
        	#port). If this field is present and contains at least one item, then this
        	#rule allows traffic only if the traffic matches at least one port in the
        	#list.
            - endPort: 0	#<integer>	false
            	#If set, indicates that the range of ports from port to endPort, inclusive,
            	#should be allowed by the policy. This field cannot be defined if the port
            	#field is not defined or if the port field is defined as a named (string)
            	#port. The endPort must be equal or greater than port. This feature is in
            	#Beta state and is enabled by default. It can be disabled using the Feature
            	#Gate "NetworkPolicyEndPort".
              port: placeholder	#<string>	false
            	#The port on the given protocol. This can either be a numerical or named
            	#port on a pod. If this field is not provided, this matches all port names
            	#and numbers. If present, only traffic on the specified protocol AND port
            	#will be matched.
              protocol: placeholder	#<string>	false
            	#The protocol (TCP, UDP, or SCTP) which traffic must match. If not
            	#specified, this field defaults to TCP.
    podSelector: 	#<Object> -required-	false
    	#Selects the pods to which this NetworkPolicy object applies. The array of
    	#ingress rules is applied to any pods selected by this field. Multiple
    	#network policies can select the same set of pods. In this case, the ingress
    	#rules for each are combined additively. This field is NOT optional and
    	#follows standard label selector semantics. An empty podSelector matches all
    	#pods in this namespace.
        matchExpressions: 	#<[]Object>	false
        	#matchExpressions is a list of label selector requirements. The requirements
        	#are ANDed.
            - key: placeholder	#<string> -required-	false
            	#key is the label key that the selector applies to.
              operator: placeholder	#<string> -required-	false
            	#operator represents a key's relationship to a set of values. Valid
            	#operators are In, NotIn, Exists and DoesNotExist.
              values: 	#<[]string>	false
                - placeholder
            	#values is an array of string values. If the operator is In or NotIn, the
            	#values array must be non-empty. If the operator is Exists or DoesNotExist,
            	#the values array must be empty. This array is replaced during a strategic
            	#merge patch.
        matchLabels: 	#<map[string]string>	false
            placeholder: placeholder
        	#matchLabels is a map of {key,value} pairs. A single {key,value} in the
        	#matchLabels map is equivalent to an element of matchExpressions, whose key
        	#field is "key", the operator is "In", and the values array contains only
        	#"value". The requirements are ANDed.
    policyTypes: 	#<[]string>	false
        - placeholder
    	#List of rule types that the NetworkPolicy relates to. Valid options are
    	#["Ingress"], ["Egress"], or ["Ingress", "Egress"]. If this field is not
    	#specified, it will default based on the existence of Ingress or Egress
    	#rules; policies that contain an Egress section are assumed to affect
    	#Egress, and all policies (whether or not they contain an Ingress section)
    	#are assumed to affect Ingress. If you want to write an egress-only policy,
    	#you must explicitly specify policyTypes [ "Egress" ]. Likewise, if you want
    	#to write a policy that specifies that no egress is allowed, you must
    	#specify a policyTypes value that include "Egress" (since such a policy
    	#would not include an Egress section and would otherwise default to just [
    	#"Ingress" ]). This field is beta-level in 1.8
