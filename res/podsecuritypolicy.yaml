apiVersion: placeholder	#<string>	false
	#APIVersion defines the versioned schema of this representation of an
	#object. Servers should convert recognized schemas to the latest internal
	#value, and may reject unrecognized values. More info:
	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
kind: placeholder	#<string>	false
	#Kind is a string value representing the REST resource this object
	#represents. Servers may infer this from the endpoint the client submits
	#requests to. Cannot be updated. In CamelCase. More info:
	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
metadata: 	#<Object>	false
	#Standard object's metadata. More info:
	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    annotations: 	#<map[string]string>	false
        placeholder: placeholder
    	#Annotations is an unstructured key value map stored with a resource that
    	#may be set by external tools to store and retrieve arbitrary metadata. They
    	#are not queryable and should be preserved when modifying objects. More
    	#info: http://kubernetes.io/docs/user-guide/annotations
    clusterName: placeholder	#<string>	false
    	#The name of the cluster which the object belongs to. This is used to
    	#distinguish resources with same name and namespace in different clusters.
    	#This field is not set anywhere right now and apiserver is going to ignore
    	#it if set in create or update request.
    creationTimestamp: placeholder	#<string>	false
    	#CreationTimestamp is a timestamp representing the server time when this
    	#object was created. It is not guaranteed to be set in happens-before order
    	#across separate operations. Clients may not set this value. It is
    	#represented in RFC3339 form and is in UTC.
    	#Populated by the system. Read-only. Null for lists. More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    deletionGracePeriodSeconds: 0	#<integer>	false
    	#Number of seconds allowed for this object to gracefully terminate before it
    	#will be removed from the system. Only set when deletionTimestamp is also
    	#set. May only be shortened. Read-only.
    deletionTimestamp: placeholder	#<string>	false
    	#DeletionTimestamp is RFC 3339 date and time at which this resource will be
    	#deleted. This field is set by the server when a graceful deletion is
    	#requested by the user, and is not directly settable by a client. The
    	#resource is expected to be deleted (no longer visible from resource lists,
    	#and not reachable by name) after the time in this field, once the
    	#finalizers list is empty. As long as the finalizers list contains items,
    	#deletion is blocked. Once the deletionTimestamp is set, this value may not
    	#be unset or be set further into the future, although it may be shortened or
    	#the resource may be deleted prior to this time. For example, a user may
    	#request that a pod is deleted in 30 seconds. The Kubelet will react by
    	#sending a graceful termination signal to the containers in the pod. After
    	#that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)
    	#to the container and after cleanup, remove the pod from the API. In the
    	#presence of network partitions, this object may still exist after this
    	#timestamp, until an administrator or automated process can determine the
    	#resource is fully terminated. If not set, graceful deletion of the object
    	#has not been requested.
    	#Populated by the system when a graceful deletion is requested. Read-only.
    	#More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    finalizers: 	#<[]string>	false
        - placeholder
    	#Must be empty before the object is deleted from the registry. Each entry is
    	#an identifier for the responsible component that will remove the entry from
    	#the list. If the deletionTimestamp of the object is non-nil, entries in
    	#this list can only be removed. Finalizers may be processed and removed in
    	#any order. Order is NOT enforced because it introduces significant risk of
    	#stuck finalizers. finalizers is a shared field, any actor with permission
    	#can reorder it. If the finalizer list is processed in order, then this can
    	#lead to a situation in which the component responsible for the first
    	#finalizer in the list is waiting for a signal (field value, external
    	#system, or other) produced by a component responsible for a finalizer later
    	#in the list, resulting in a deadlock. Without enforced ordering finalizers
    	#are free to order amongst themselves and are not vulnerable to ordering
    	#changes in the list.
    generateName: placeholder	#<string>	false
    	#GenerateName is an optional prefix, used by the server, to generate a
    	#unique name ONLY IF the Name field has not been provided. If this field is
    	#used, the name returned to the client will be different than the name
    	#passed. This value will also be combined with a unique suffix. The provided
    	#value has the same validation rules as the Name field, and may be truncated
    	#by the length of the suffix required to make the value unique on the
    	#server.
    	#If this field is specified and the generated name exists, the server will
    	#NOT return a 409 - instead, it will either return 201 Created or 500 with
    	#Reason ServerTimeout indicating a unique name could not be found in the
    	#time allotted, and the client should retry (optionally after the time
    	#indicated in the Retry-After header).
    	#Applied only if Name is not specified. More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
    generation: 0	#<integer>	false
    	#A sequence number representing a specific generation of the desired state.
    	#Populated by the system. Read-only.
    labels: 	#<map[string]string>	false
        placeholder: placeholder
    	#Map of string keys and values that can be used to organize and categorize
    	#(scope and select) objects. May match selectors of replication controllers
    	#and services. More info: http://kubernetes.io/docs/user-guide/labels
    managedFields: 	#<[]Object>	false
    	#ManagedFields maps workflow-id and version to the set of fields that are
    	#managed by that workflow. This is mostly for internal housekeeping, and
    	#users typically shouldn't need to set or understand this field. A workflow
    	#can be the user's name, a controller's name, or the name of a specific
    	#apply path like "ci-cd". The set of fields is always in the version that
    	#the workflow used when modifying the object.
        - apiVersion: placeholder	#<string>	false
        	#APIVersion defines the version of this resource that this field set applies
        	#to. The format is "group/version" just like the top-level APIVersion field.
        	#It is necessary to track the version of a field set because it cannot be
        	#automatically converted.
          fieldsType: placeholder	#<string>	false
        	#FieldsType is the discriminator for the different fields format and
        	#version. There is currently only one possible value: "FieldsV1"
          fieldsV1: 	#<map[string]>	false
            placeholder: placeholder
        	#FieldsV1 holds the first JSON version format as described in the "FieldsV1"
        	#type.
          manager: placeholder	#<string>	false
        	#Manager is an identifier of the workflow managing these fields.
          operation: placeholder	#<string>	false
        	#Operation is the type of operation which lead to this ManagedFieldsEntry
        	#being created. The only valid values for this field are 'Apply' and
        	#'Update'.
          subresource: placeholder	#<string>	false
        	#Subresource is the name of the subresource used to update that object, or
        	#empty string if the object was updated through the main resource. The value
        	#of this field is used to distinguish between managers, even if they share
        	#the same name. For example, a status update will be distinct from a regular
        	#update using the same manager name. Note that the APIVersion field is not
        	#related to the Subresource field and it always corresponds to the version
        	#of the main resource.
          time: placeholder	#<string>	false
        	#Time is timestamp of when these fields were set. It should always be empty
        	#if Operation is 'Apply'
    name: placeholder	#<string>	false
    	#Name must be unique within a namespace. Is required when creating
    	#resources, although some resources may allow a client to request the
    	#generation of an appropriate name automatically. Name is primarily intended
    	#for creation idempotence and configuration definition. Cannot be updated.
    	#More info: http://kubernetes.io/docs/user-guide/identifiers#names
    namespace: placeholder	#<string>	false
    	#Namespace defines the space within which each name must be unique. An empty
    	#namespace is equivalent to the "default" namespace, but "default" is the
    	#canonical representation. Not all objects are required to be scoped to a
    	#namespace - the value of this field for those objects will be empty.
    	#Must be a DNS_LABEL. Cannot be updated. More info:
    	#http://kubernetes.io/docs/user-guide/namespaces
    ownerReferences: 	#<[]Object>	false
    	#List of objects depended by this object. If ALL objects in the list have
    	#been deleted, this object will be garbage collected. If this object is
    	#managed by a controller, then an entry in this list will point to this
    	#controller, with the controller field set to true. There cannot be more
    	#than one managing controller.
        - apiVersion: placeholder	#<string> -required-	false
        	#API version of the referent.
          blockOwnerDeletion: false	#<boolean>	false
        	#If true, AND if the owner has the "foregroundDeletion" finalizer, then the
        	#owner cannot be deleted from the key-value store until this reference is
        	#removed. Defaults to false. To set this field, a user needs "delete"
        	#permission of the owner, otherwise 422 (Unprocessable Entity) will be
        	#returned.
          controller: false	#<boolean>	false
        	#If true, this reference points to the managing controller.
          kind: placeholder	#<string> -required-	false
        	#Kind of the referent. More info:
        	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          name: placeholder	#<string> -required-	false
        	#Name of the referent. More info:
        	#http://kubernetes.io/docs/user-guide/identifiers#names
          uid: placeholder	#<string> -required-	false
        	#UID of the referent. More info:
        	#http://kubernetes.io/docs/user-guide/identifiers#uids
    resourceVersion: placeholder	#<string>	false
    	#An opaque value that represents the internal version of this object that
    	#can be used by clients to determine when objects have changed. May be used
    	#for optimistic concurrency, change detection, and the watch operation on a
    	#resource or set of resources. Clients must treat these values as opaque and
    	#passed unmodified back to the server. They may only be valid for a
    	#particular resource or set of resources.
    	#Populated by the system. Read-only. Value must be treated as opaque by
    	#clients and . More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    selfLink: placeholder	#<string>	false
    	#SelfLink is a URL representing this object. Populated by the system.
    	#Read-only.
    	#DEPRECATED Kubernetes will stop propagating this field in 1.20 release and
    	#the field is planned to be removed in 1.21 release.
    uid: placeholder	#<string>	false
    	#UID is the unique in time and space value for this object. It is typically
    	#generated by the server on successful creation of a resource and is not
    	#allowed to change on PUT operations.
    	#Populated by the system. Read-only. More info:
    	#http://kubernetes.io/docs/user-guide/identifiers#uids
spec: 	#<Object>	false
	#spec defines the policy enforced.
    allowPrivilegeEscalation: false	#<boolean>	false
    	#allowPrivilegeEscalation determines if a pod can request to allow privilege
    	#escalation. If unspecified, defaults to true.
    allowedCSIDrivers: 	#<[]Object>	false
    	#AllowedCSIDrivers is an allowlist of inline CSI drivers that must be
    	#explicitly set to be embedded within a pod spec. An empty value indicates
    	#that any CSI driver can be used for inline ephemeral volumes. This is a
    	#beta field, and is only honored if the API server enables the
    	#CSIInlineVolume feature gate.
        - name: placeholder	#<string> -required-	false
        	#Name is the registered name of the CSI driver
    allowedCapabilities: 	#<[]string>	false
        - placeholder
    	#allowedCapabilities is a list of capabilities that can be requested to add
    	#to the container. Capabilities in this field may be added at the pod
    	#author's discretion. You must not list a capability in both
    	#allowedCapabilities and requiredDropCapabilities.
    allowedFlexVolumes: 	#<[]Object>	false
    	#allowedFlexVolumes is an allowlist of Flexvolumes. Empty or nil indicates
    	#that all Flexvolumes may be used. This parameter is effective only when the
    	#usage of the Flexvolumes is allowed in the "volumes" field.
        - driver: placeholder	#<string> -required-	false
        	#driver is the name of the Flexvolume driver.
    allowedHostPaths: 	#<[]Object>	false
    	#allowedHostPaths is an allowlist of host paths. Empty indicates that all
    	#host paths may be used.
        - pathPrefix: placeholder	#<string>	false
        	#pathPrefix is the path prefix that the host volume must match. It does not
        	#support `*`. Trailing slashes are trimmed when validating the path prefix
        	#with a host path.
        	#Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would
        	#not allow `/food` or `/etc/foo`
          readOnly: false	#<boolean>	false
        	#when set to true, will allow host volumes matching the pathPrefix only if
        	#all volume mounts are readOnly.
    allowedProcMountTypes: 	#<[]string>	false
        - placeholder
    	#AllowedProcMountTypes is an allowlist of allowed ProcMountTypes. Empty or
    	#nil indicates that only the DefaultProcMountType may be used. This requires
    	#the ProcMountType feature flag to be enabled.
    allowedUnsafeSysctls: 	#<[]string>	false
        - placeholder
    	#allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls,
    	#defaults to none. Each entry is either a plain sysctl name or ends in "*"
    	#in which case it is considered as a prefix of allowed sysctls. Single *
    	#means all unsafe sysctls are allowed. Kubelet has to allowlist all allowed
    	#unsafe sysctls explicitly to avoid rejection.
    	#Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*"
    	#allows "foo.bar", "foo.baz", etc.
    defaultAddCapabilities: 	#<[]string>	false
        - placeholder
    	#defaultAddCapabilities is the default set of capabilities that will be
    	#added to the container unless the pod spec specifically drops the
    	#capability. You may not list a capability in both defaultAddCapabilities
    	#and requiredDropCapabilities. Capabilities added here are implicitly
    	#allowed, and need not be included in the allowedCapabilities list.
    defaultAllowPrivilegeEscalation: false	#<boolean>	false
    	#defaultAllowPrivilegeEscalation controls the default setting for whether a
    	#process can gain more privileges than its parent process.
    forbiddenSysctls: 	#<[]string>	false
        - placeholder
    	#forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to
    	#none. Each entry is either a plain sysctl name or ends in "*" in which case
    	#it is considered as a prefix of forbidden sysctls. Single * means all
    	#sysctls are forbidden.
    	#Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*"
    	#forbids "foo.bar", "foo.baz", etc.
    fsGroup: 	#<Object> -required-	false
    	#fsGroup is the strategy that will dictate what fs group is used by the
    	#SecurityContext.
        ranges: 	#<[]Object>	false
        	#ranges are the allowed ranges of fs groups. If you would like to force a
        	#single fs group then supply a single range with the same start and end.
        	#Required for MustRunAs.
            - max: placeholder	#<integer> -required-	false
            	#max is the end of the range, inclusive.
              min: placeholder	#<integer> -required-	false
            	#min is the start of the range, inclusive.
        rule: placeholder	#<string>	false
        	#rule is the strategy that will dictate what FSGroup is used in the
        	#SecurityContext.
    hostIPC: false	#<boolean>	false
    	#hostIPC determines if the policy allows the use of HostIPC in the pod spec.
    hostNetwork: false	#<boolean>	false
    	#hostNetwork determines if the policy allows the use of HostNetwork in the
    	#pod spec.
    hostPID: false	#<boolean>	false
    	#hostPID determines if the policy allows the use of HostPID in the pod spec.
    hostPorts: 	#<[]Object>	false
    	#hostPorts determines which host port ranges are allowed to be exposed.
        - max: placeholder	#<integer> -required-	false
        	#max is the end of the range, inclusive.
          min: placeholder	#<integer> -required-	false
        	#min is the start of the range, inclusive.
    privileged: false	#<boolean>	false
    	#privileged determines if a pod can request to be run as privileged.
    readOnlyRootFilesystem: false	#<boolean>	false
    	#readOnlyRootFilesystem when set to true will force containers to run with a
    	#read only root file system. If the container specifically requests to run
    	#with a non-read only root file system the PSP should deny the pod. If set
    	#to false the container may run with a read only root file system if it
    	#wishes but it will not be forced to.
    requiredDropCapabilities: 	#<[]string>	false
        - placeholder
    	#requiredDropCapabilities are the capabilities that will be dropped from the
    	#container. These are required to be dropped and cannot be added.
    runAsGroup: 	#<Object>	false
    	#RunAsGroup is the strategy that will dictate the allowable RunAsGroup
    	#values that may be set. If this field is omitted, the pod's RunAsGroup can
    	#take any value. This field requires the RunAsGroup feature gate to be
    	#enabled.
        ranges: 	#<[]Object>	false
        	#ranges are the allowed ranges of gids that may be used. If you would like
        	#to force a single gid then supply a single range with the same start and
        	#end. Required for MustRunAs.
            - max: placeholder	#<integer> -required-	false
            	#max is the end of the range, inclusive.
              min: placeholder	#<integer> -required-	false
            	#min is the start of the range, inclusive.
        rule: placeholder	#<string> -required-	false
        	#rule is the strategy that will dictate the allowable RunAsGroup values that
        	#may be set.
    runAsUser: 	#<Object> -required-	false
    	#runAsUser is the strategy that will dictate the allowable RunAsUser values
    	#that may be set.
        ranges: 	#<[]Object>	false
        	#ranges are the allowed ranges of uids that may be used. If you would like
        	#to force a single uid then supply a single range with the same start and
        	#end. Required for MustRunAs.
            - max: placeholder	#<integer> -required-	false
            	#max is the end of the range, inclusive.
              min: placeholder	#<integer> -required-	false
            	#min is the start of the range, inclusive.
        rule: placeholder	#<string> -required-	false
        	#rule is the strategy that will dictate the allowable RunAsUser values that
        	#may be set.
    runtimeClass: 	#<Object>	false
    	#runtimeClass is the strategy that will dictate the allowable RuntimeClasses
    	#for a pod. If this field is omitted, the pod's runtimeClassName field is
    	#unrestricted. Enforcement of this field depends on the RuntimeClass feature
    	#gate being enabled.
        allowedRuntimeClassNames: 	#<[]string> -required-	false
            - placeholder
        	#allowedRuntimeClassNames is an allowlist of RuntimeClass names that may be
        	#specified on a pod. A value of "*" means that any RuntimeClass name is
        	#allowed, and must be the only item in the list. An empty list requires the
        	#RuntimeClassName field to be unset.
        defaultRuntimeClassName: placeholder	#<string>	false
        	#defaultRuntimeClassName is the default RuntimeClassName to set on the pod.
        	#The default MUST be allowed by the allowedRuntimeClassNames list. A value
        	#of nil does not mutate the Pod.
    seLinux: 	#<Object> -required-	false
    	#seLinux is the strategy that will dictate the allowable labels that may be
    	#set.
        rule: placeholder	#<string> -required-	false
        	#rule is the strategy that will dictate the allowable labels that may be
        	#set.
        seLinuxOptions: 	#<Object>	false
        	#seLinuxOptions required to run as; required for MustRunAs More info:
        	#https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
            level: placeholder	#<string>	false
            	#Level is SELinux level label that applies to the container.
            role: placeholder	#<string>	false
            	#Role is a SELinux role label that applies to the container.
            type: placeholder	#<string>	false
            	#Type is a SELinux type label that applies to the container.
            user: placeholder	#<string>	false
            	#User is a SELinux user label that applies to the container.
    supplementalGroups: 	#<Object> -required-	false
    	#supplementalGroups is the strategy that will dictate what supplemental
    	#groups are used by the SecurityContext.
        ranges: 	#<[]Object>	false
        	#ranges are the allowed ranges of supplemental groups. If you would like to
        	#force a single supplemental group then supply a single range with the same
        	#start and end. Required for MustRunAs.
            - max: placeholder	#<integer> -required-	false
            	#max is the end of the range, inclusive.
              min: placeholder	#<integer> -required-	false
            	#min is the start of the range, inclusive.
        rule: placeholder	#<string>	false
        	#rule is the strategy that will dictate what supplemental groups is used in
        	#the SecurityContext.
    volumes: 	#<[]string>	false
        - placeholder
    	#volumes is an allowlist of volume plugins. Empty indicates that no volumes
    	#may be used. To allow all volumes you may use '*'.
