apiVersion: placeholder	#<string>	false
	#APIVersion defines the versioned schema of this representation of an
	#object. Servers should convert recognized schemas to the latest internal
	#value, and may reject unrecognized values. More info:
	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
kind: placeholder	#<string>	false
	#Kind is a string value representing the REST resource this object
	#represents. Servers may infer this from the endpoint the client submits
	#requests to. Cannot be updated. In CamelCase. More info:
	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
metadata: 	#<Object>	false
	#Standard object's metadata. More info:
	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    annotations: 	#<map[string]string>	false
        placeholder: placeholder
    	#Annotations is an unstructured key value map stored with a resource that
    	#may be set by external tools to store and retrieve arbitrary metadata. They
    	#are not queryable and should be preserved when modifying objects. More
    	#info: http://kubernetes.io/docs/user-guide/annotations
    clusterName: placeholder	#<string>	false
    	#The name of the cluster which the object belongs to. This is used to
    	#distinguish resources with same name and namespace in different clusters.
    	#This field is not set anywhere right now and apiserver is going to ignore
    	#it if set in create or update request.
    creationTimestamp: placeholder	#<string>	false
    	#CreationTimestamp is a timestamp representing the server time when this
    	#object was created. It is not guaranteed to be set in happens-before order
    	#across separate operations. Clients may not set this value. It is
    	#represented in RFC3339 form and is in UTC.
    	#Populated by the system. Read-only. Null for lists. More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    deletionGracePeriodSeconds: 0	#<integer>	false
    	#Number of seconds allowed for this object to gracefully terminate before it
    	#will be removed from the system. Only set when deletionTimestamp is also
    	#set. May only be shortened. Read-only.
    deletionTimestamp: placeholder	#<string>	false
    	#DeletionTimestamp is RFC 3339 date and time at which this resource will be
    	#deleted. This field is set by the server when a graceful deletion is
    	#requested by the user, and is not directly settable by a client. The
    	#resource is expected to be deleted (no longer visible from resource lists,
    	#and not reachable by name) after the time in this field, once the
    	#finalizers list is empty. As long as the finalizers list contains items,
    	#deletion is blocked. Once the deletionTimestamp is set, this value may not
    	#be unset or be set further into the future, although it may be shortened or
    	#the resource may be deleted prior to this time. For example, a user may
    	#request that a pod is deleted in 30 seconds. The Kubelet will react by
    	#sending a graceful termination signal to the containers in the pod. After
    	#that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)
    	#to the container and after cleanup, remove the pod from the API. In the
    	#presence of network partitions, this object may still exist after this
    	#timestamp, until an administrator or automated process can determine the
    	#resource is fully terminated. If not set, graceful deletion of the object
    	#has not been requested.
    	#Populated by the system when a graceful deletion is requested. Read-only.
    	#More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    finalizers: 	#<[]string>	false
        - placeholder
    	#Must be empty before the object is deleted from the registry. Each entry is
    	#an identifier for the responsible component that will remove the entry from
    	#the list. If the deletionTimestamp of the object is non-nil, entries in
    	#this list can only be removed. Finalizers may be processed and removed in
    	#any order. Order is NOT enforced because it introduces significant risk of
    	#stuck finalizers. finalizers is a shared field, any actor with permission
    	#can reorder it. If the finalizer list is processed in order, then this can
    	#lead to a situation in which the component responsible for the first
    	#finalizer in the list is waiting for a signal (field value, external
    	#system, or other) produced by a component responsible for a finalizer later
    	#in the list, resulting in a deadlock. Without enforced ordering finalizers
    	#are free to order amongst themselves and are not vulnerable to ordering
    	#changes in the list.
    generateName: placeholder	#<string>	false
    	#GenerateName is an optional prefix, used by the server, to generate a
    	#unique name ONLY IF the Name field has not been provided. If this field is
    	#used, the name returned to the client will be different than the name
    	#passed. This value will also be combined with a unique suffix. The provided
    	#value has the same validation rules as the Name field, and may be truncated
    	#by the length of the suffix required to make the value unique on the
    	#server.
    	#If this field is specified and the generated name exists, the server will
    	#NOT return a 409 - instead, it will either return 201 Created or 500 with
    	#Reason ServerTimeout indicating a unique name could not be found in the
    	#time allotted, and the client should retry (optionally after the time
    	#indicated in the Retry-After header).
    	#Applied only if Name is not specified. More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
    generation: 0	#<integer>	false
    	#A sequence number representing a specific generation of the desired state.
    	#Populated by the system. Read-only.
    labels: 	#<map[string]string>	false
        placeholder: placeholder
    	#Map of string keys and values that can be used to organize and categorize
    	#(scope and select) objects. May match selectors of replication controllers
    	#and services. More info: http://kubernetes.io/docs/user-guide/labels
    managedFields: 	#<[]Object>	false
    	#ManagedFields maps workflow-id and version to the set of fields that are
    	#managed by that workflow. This is mostly for internal housekeeping, and
    	#users typically shouldn't need to set or understand this field. A workflow
    	#can be the user's name, a controller's name, or the name of a specific
    	#apply path like "ci-cd". The set of fields is always in the version that
    	#the workflow used when modifying the object.
        - apiVersion: placeholder	#<string>	false
        	#APIVersion defines the version of this resource that this field set applies
        	#to. The format is "group/version" just like the top-level APIVersion field.
        	#It is necessary to track the version of a field set because it cannot be
        	#automatically converted.
          fieldsType: placeholder	#<string>	false
        	#FieldsType is the discriminator for the different fields format and
        	#version. There is currently only one possible value: "FieldsV1"
          fieldsV1: 	#<map[string]>	false
            placeholder: placeholder
        	#FieldsV1 holds the first JSON version format as described in the "FieldsV1"
        	#type.
          manager: placeholder	#<string>	false
        	#Manager is an identifier of the workflow managing these fields.
          operation: placeholder	#<string>	false
        	#Operation is the type of operation which lead to this ManagedFieldsEntry
        	#being created. The only valid values for this field are 'Apply' and
        	#'Update'.
          subresource: placeholder	#<string>	false
        	#Subresource is the name of the subresource used to update that object, or
        	#empty string if the object was updated through the main resource. The value
        	#of this field is used to distinguish between managers, even if they share
        	#the same name. For example, a status update will be distinct from a regular
        	#update using the same manager name. Note that the APIVersion field is not
        	#related to the Subresource field and it always corresponds to the version
        	#of the main resource.
          time: placeholder	#<string>	false
        	#Time is timestamp of when these fields were set. It should always be empty
        	#if Operation is 'Apply'
    name: placeholder	#<string>	false
    	#Name must be unique within a namespace. Is required when creating
    	#resources, although some resources may allow a client to request the
    	#generation of an appropriate name automatically. Name is primarily intended
    	#for creation idempotence and configuration definition. Cannot be updated.
    	#More info: http://kubernetes.io/docs/user-guide/identifiers#names
    namespace: placeholder	#<string>	false
    	#Namespace defines the space within which each name must be unique. An empty
    	#namespace is equivalent to the "default" namespace, but "default" is the
    	#canonical representation. Not all objects are required to be scoped to a
    	#namespace - the value of this field for those objects will be empty.
    	#Must be a DNS_LABEL. Cannot be updated. More info:
    	#http://kubernetes.io/docs/user-guide/namespaces
    ownerReferences: 	#<[]Object>	false
    	#List of objects depended by this object. If ALL objects in the list have
    	#been deleted, this object will be garbage collected. If this object is
    	#managed by a controller, then an entry in this list will point to this
    	#controller, with the controller field set to true. There cannot be more
    	#than one managing controller.
        - apiVersion: placeholder	#<string> -required-	false
        	#API version of the referent.
          blockOwnerDeletion: false	#<boolean>	false
        	#If true, AND if the owner has the "foregroundDeletion" finalizer, then the
        	#owner cannot be deleted from the key-value store until this reference is
        	#removed. Defaults to false. To set this field, a user needs "delete"
        	#permission of the owner, otherwise 422 (Unprocessable Entity) will be
        	#returned.
          controller: false	#<boolean>	false
        	#If true, this reference points to the managing controller.
          kind: placeholder	#<string> -required-	false
        	#Kind of the referent. More info:
        	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          name: placeholder	#<string> -required-	false
        	#Name of the referent. More info:
        	#http://kubernetes.io/docs/user-guide/identifiers#names
          uid: placeholder	#<string> -required-	false
        	#UID of the referent. More info:
        	#http://kubernetes.io/docs/user-guide/identifiers#uids
    resourceVersion: placeholder	#<string>	false
    	#An opaque value that represents the internal version of this object that
    	#can be used by clients to determine when objects have changed. May be used
    	#for optimistic concurrency, change detection, and the watch operation on a
    	#resource or set of resources. Clients must treat these values as opaque and
    	#passed unmodified back to the server. They may only be valid for a
    	#particular resource or set of resources.
    	#Populated by the system. Read-only. Value must be treated as opaque by
    	#clients and . More info:
    	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    selfLink: placeholder	#<string>	false
    	#SelfLink is a URL representing this object. Populated by the system.
    	#Read-only.
    	#DEPRECATED Kubernetes will stop propagating this field in 1.20 release and
    	#the field is planned to be removed in 1.21 release.
    uid: placeholder	#<string>	false
    	#UID is the unique in time and space value for this object. It is typically
    	#generated by the server on successful creation of a resource and is not
    	#allowed to change on PUT operations.
    	#Populated by the system. Read-only. More info:
    	#http://kubernetes.io/docs/user-guide/identifiers#uids
spec: 	#<Object>	false
	#Spec defines a specification of a persistent volume owned by the cluster.
	#Provisioned by an administrator. More info:
	#https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
    accessModes: 	#<[]string>	false
        - placeholder
    	#AccessModes contains all ways the volume can be mounted. More info:
    	#https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes
    awsElasticBlockStore: 	#<Object>	false
    	#AWSElasticBlockStore represents an AWS Disk resource that is attached to a
    	#kubelet's host machine and then exposed to the pod. More info:
    	#https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
        fsType: placeholder	#<string>	false
        	#Filesystem type of the volume that you want to mount. Tip: Ensure that the
        	#filesystem type is supported by the host operating system. Examples:
        	#"ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        	#More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
        partition: 0	#<integer>	false
        	#The partition in the volume that you want to mount. If omitted, the default
        	#is to mount by volume name. Examples: For volume /dev/sda1, you specify the
        	#partition as "1". Similarly, the volume partition for /dev/sda is "0" (or
        	#you can leave the property empty).
        readOnly: false	#<boolean>	false
        	#Specify "true" to force and set the ReadOnly property in VolumeMounts to
        	#"true". If omitted, the default is "false". More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
        volumeID: placeholder	#<string> -required-	false
        	#Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More
        	#info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    azureDisk: 	#<Object>	false
    	#AzureDisk represents an Azure Data Disk mount on the host and bind mount to
    	#the pod.
        cachingMode: placeholder	#<string>	false
        	#Host Caching mode: None, Read Only, Read Write.
        diskName: placeholder	#<string> -required-	false
        	#The Name of the data disk in the blob storage
        diskURI: placeholder	#<string> -required-	false
        	#The URI the data disk in the blob storage
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. Must be a filesystem type supported by the host
        	#operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be
        	#"ext4" if unspecified.
        kind: placeholder	#<string>	false
        	#Expected values Shared: multiple blob disks per storage account Dedicated:
        	#single blob disk per storage account Managed: azure managed data disk (only
        	#in managed availability set). defaults to shared
        readOnly: false	#<boolean>	false
        	#Defaults to false (read/write). ReadOnly here will force the ReadOnly
        	#setting in VolumeMounts.
    azureFile: 	#<Object>	false
    	#AzureFile represents an Azure File Service mount on the host and bind mount
    	#to the pod.
        readOnly: false	#<boolean>	false
        	#Defaults to false (read/write). ReadOnly here will force the ReadOnly
        	#setting in VolumeMounts.
        secretName: placeholder	#<string> -required-	false
        	#the name of secret that contains Azure Storage Account Name and Key
        secretNamespace: placeholder	#<string>	false
        	#the namespace of the secret that contains Azure Storage Account Name and
        	#Key default is the same as the Pod
        shareName: placeholder	#<string> -required-	false
        	#Share Name
    capacity: 	#<map[string]string>	false
        placeholder: placeholder
    	#A description of the persistent volume's resources and capacity. More info:
    	#https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
    cephfs: 	#<Object>	false
    	#CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
        monitors: 	#<[]string> -required-	false
            - placeholder
        	#Required: Monitors is a collection of Ceph monitors More info:
        	#https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
        path: placeholder	#<string>	false
        	#Optional: Used as the mounted root, rather than the full Ceph tree, default
        	#is /
        readOnly: false	#<boolean>	false
        	#Optional: Defaults to false (read/write). ReadOnly here will force the
        	#ReadOnly setting in VolumeMounts. More info:
        	#https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
        secretFile: placeholder	#<string>	false
        	#Optional: SecretFile is the path to key ring for User, default is
        	#/etc/ceph/user.secret More info:
        	#https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
        secretRef: 	#<Object>	false
        	#Optional: SecretRef is reference to the authentication secret for User,
        	#default is empty. More info:
        	#https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
        user: placeholder	#<string>	false
        	#Optional: User is the rados user name, default is admin More info:
        	#https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    cinder: 	#<Object>	false
    	#Cinder represents a cinder volume attached and mounted on kubelets host
    	#machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. Must be a filesystem type supported by the host
        	#operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
        	#be "ext4" if unspecified. More info:
        	#https://examples.k8s.io/mysql-cinder-pd/README.md
        readOnly: false	#<boolean>	false
        	#Optional: Defaults to false (read/write). ReadOnly here will force the
        	#ReadOnly setting in VolumeMounts. More info:
        	#https://examples.k8s.io/mysql-cinder-pd/README.md
        secretRef: 	#<Object>	false
        	#Optional: points to a secret object containing parameters used to connect
        	#to OpenStack.
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
        volumeID: placeholder	#<string> -required-	false
        	#volume id used to identify the volume in cinder. More info:
        	#https://examples.k8s.io/mysql-cinder-pd/README.md
    claimRef: 	#<Object>	false
    	#ClaimRef is part of a bi-directional binding between PersistentVolume and
    	#PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName
    	#is the authoritative bind between PV and PVC. More info:
    	#https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding
        apiVersion: placeholder	#<string>	false
        	#API version of the referent.
        fieldPath: placeholder	#<string>	false
        	#If referring to a piece of an object instead of an entire object, this
        	#string should contain a valid JSON/Go field access statement, such as
        	#desiredState.manifest.containers[2]. For example, if the object reference
        	#is to a container within a pod, this would take on a value like:
        	#"spec.containers{name}" (where "name" refers to the name of the container
        	#that triggered the event) or if no container name is specified
        	#"spec.containers[2]" (container with index 2 in this pod). This syntax is
        	#chosen only to have some well-defined way of referencing a part of an
        	#object.
        kind: placeholder	#<string>	false
        	#Kind of the referent. More info:
        	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        name: placeholder	#<string>	false
        	#Name of the referent. More info:
        	#https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        namespace: placeholder	#<string>	false
        	#Namespace of the referent. More info:
        	#https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
        resourceVersion: placeholder	#<string>	false
        	#Specific resourceVersion to which this reference is made, if any. More
        	#info:
        	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
        uid: placeholder	#<string>	false
        	#UID of the referent. More info:
        	#https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    csi: 	#<Object>	false
    	#CSI represents storage that is handled by an external CSI driver (Beta
    	#feature).
        controllerExpandSecretRef: 	#<Object>	false
        	#ControllerExpandSecretRef is a reference to the secret object containing
        	#sensitive information to pass to the CSI driver to complete the CSI
        	#ControllerExpandVolume call. This is an alpha field and requires enabling
        	#ExpandCSIVolumes feature gate. This field is optional, and may be empty if
        	#no secret is required. If the secret object contains more than one secret,
        	#all secrets are passed.
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
        controllerPublishSecretRef: 	#<Object>	false
        	#ControllerPublishSecretRef is a reference to the secret object containing
        	#sensitive information to pass to the CSI driver to complete the CSI
        	#ControllerPublishVolume and ControllerUnpublishVolume calls. This field is
        	#optional, and may be empty if no secret is required. If the secret object
        	#contains more than one secret, all secrets are passed.
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
        driver: placeholder	#<string> -required-	false
        	#Driver is the name of the driver to use for this volume. Required.
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. Must be a filesystem type supported by the host
        	#operating system. Ex. "ext4", "xfs", "ntfs".
        nodePublishSecretRef: 	#<Object>	false
        	#NodePublishSecretRef is a reference to the secret object containing
        	#sensitive information to pass to the CSI driver to complete the CSI
        	#NodePublishVolume and NodeUnpublishVolume calls. This field is optional,
        	#and may be empty if no secret is required. If the secret object contains
        	#more than one secret, all secrets are passed.
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
        nodeStageSecretRef: 	#<Object>	false
        	#NodeStageSecretRef is a reference to the secret object containing sensitive
        	#information to pass to the CSI driver to complete the CSI NodeStageVolume
        	#and NodeStageVolume and NodeUnstageVolume calls. This field is optional,
        	#and may be empty if no secret is required. If the secret object contains
        	#more than one secret, all secrets are passed.
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
        readOnly: false	#<boolean>	false
        	#Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to
        	#false (read/write).
        volumeAttributes: 	#<map[string]string>	false
            placeholder: placeholder
        	#Attributes of the volume to publish.
        volumeHandle: placeholder	#<string> -required-	false
        	#VolumeHandle is the unique volume name returned by the CSI volume
        	#plugin’s CreateVolume to refer to the volume on all subsequent calls.
        	#Required.
    fc: 	#<Object>	false
    	#FC represents a Fibre Channel resource that is attached to a kubelet's host
    	#machine and then exposed to the pod.
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. Must be a filesystem type supported by the host
        	#operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be
        	#"ext4" if unspecified.
        lun: 0	#<integer>	false
        	#Optional: FC target lun number
        readOnly: false	#<boolean>	false
        	#Optional: Defaults to false (read/write). ReadOnly here will force the
        	#ReadOnly setting in VolumeMounts.
        targetWWNs: 	#<[]string>	false
            - placeholder
        	#Optional: FC target worldwide names (WWNs)
        wwids: 	#<[]string>	false
            - placeholder
        	#Optional: FC volume world wide identifiers (wwids) Either wwids or
        	#combination of targetWWNs and lun must be set, but not both simultaneously.
    flexVolume: 	#<Object>	false
    	#FlexVolume represents a generic volume resource that is
    	#provisioned/attached using an exec based plugin.
        driver: placeholder	#<string> -required-	false
        	#Driver is the name of the driver to use for this volume.
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. Must be a filesystem type supported by the host
        	#operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends
        	#on FlexVolume script.
        options: 	#<map[string]string>	false
            placeholder: placeholder
        	#Optional: Extra command options if any.
        readOnly: false	#<boolean>	false
        	#Optional: Defaults to false (read/write). ReadOnly here will force the
        	#ReadOnly setting in VolumeMounts.
        secretRef: 	#<Object>	false
        	#Optional: SecretRef is reference to the secret object containing sensitive
        	#information to pass to the plugin scripts. This may be empty if no secret
        	#object is specified. If the secret object contains more than one secret,
        	#all secrets are passed to the plugin scripts.
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
    flocker: 	#<Object>	false
    	#Flocker represents a Flocker volume attached to a kubelet's host machine
    	#and exposed to the pod for its usage. This depends on the Flocker control
    	#service being running
        datasetName: placeholder	#<string>	false
        	#Name of the dataset stored as metadata -> name on the dataset for Flocker
        	#should be considered as deprecated
        datasetUUID: placeholder	#<string>	false
        	#UUID of the dataset. This is unique identifier of a Flocker dataset
    gcePersistentDisk: 	#<Object>	false
    	#GCEPersistentDisk represents a GCE Disk resource that is attached to a
    	#kubelet's host machine and then exposed to the pod. Provisioned by an
    	#admin. More info:
    	#https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
        fsType: placeholder	#<string>	false
        	#Filesystem type of the volume that you want to mount. Tip: Ensure that the
        	#filesystem type is supported by the host operating system. Examples:
        	#"ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        	#More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
        partition: 0	#<integer>	false
        	#The partition in the volume that you want to mount. If omitted, the default
        	#is to mount by volume name. Examples: For volume /dev/sda1, you specify the
        	#partition as "1". Similarly, the volume partition for /dev/sda is "0" (or
        	#you can leave the property empty). More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
        pdName: placeholder	#<string> -required-	false
        	#Unique name of the PD resource in GCE. Used to identify the disk in GCE.
        	#More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
        readOnly: false	#<boolean>	false
        	#ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to
        	#false. More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    glusterfs: 	#<Object>	false
    	#Glusterfs represents a Glusterfs volume that is attached to a host and
    	#exposed to the pod. Provisioned by an admin. More info:
    	#https://examples.k8s.io/volumes/glusterfs/README.md
        endpoints: placeholder	#<string> -required-	false
        	#EndpointsName is the endpoint name that details Glusterfs topology. More
        	#info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        endpointsNamespace: placeholder	#<string>	false
        	#EndpointsNamespace is the namespace that contains Glusterfs endpoint. If
        	#this field is empty, the EndpointNamespace defaults to the same namespace
        	#as the bound PVC. More info:
        	#https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        path: placeholder	#<string> -required-	false
        	#Path is the Glusterfs volume path. More info:
        	#https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        readOnly: false	#<boolean>	false
        	#ReadOnly here will force the Glusterfs volume to be mounted with read-only
        	#permissions. Defaults to false. More info:
        	#https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    hostPath: 	#<Object>	false
    	#HostPath represents a directory on the host. Provisioned by a developer or
    	#tester. This is useful for single-node development and testing only!
    	#On-host storage is not supported in any way and WILL NOT WORK in a
    	#multi-node cluster. More info:
    	#https://kubernetes.io/docs/concepts/storage/volumes#hostpath
        path: placeholder	#<string> -required-	false
        	#Path of the directory on the host. If the path is a symlink, it will follow
        	#the link to the real path. More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#hostpath
        type: placeholder	#<string>	false
        	#Type for HostPath Volume Defaults to "" More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    iscsi: 	#<Object>	false
    	#ISCSI represents an ISCSI Disk resource that is attached to a kubelet's
    	#host machine and then exposed to the pod. Provisioned by an admin.
        chapAuthDiscovery: false	#<boolean>	false
        	#whether support iSCSI Discovery CHAP authentication
        chapAuthSession: false	#<boolean>	false
        	#whether support iSCSI Session CHAP authentication
        fsType: placeholder	#<string>	false
        	#Filesystem type of the volume that you want to mount. Tip: Ensure that the
        	#filesystem type is supported by the host operating system. Examples:
        	#"ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        	#More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
        initiatorName: placeholder	#<string>	false
        	#Custom iSCSI Initiator Name. If initiatorName is specified with
        	#iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume
        	#name> will be created for the connection.
        iqn: placeholder	#<string> -required-	false
        	#Target iSCSI Qualified Name.
        iscsiInterface: placeholder	#<string>	false
        	#iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default'
        	#(tcp).
        lun: placeholder	#<integer> -required-	false
        	#iSCSI Target Lun number.
        portals: 	#<[]string>	false
            - placeholder
        	#iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the
        	#port is other than default (typically TCP ports 860 and 3260).
        readOnly: false	#<boolean>	false
        	#ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to
        	#false.
        secretRef: 	#<Object>	false
        	#CHAP Secret for iSCSI target and initiator authentication
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
        targetPortal: placeholder	#<string> -required-	false
        	#iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
        	#is other than default (typically TCP ports 860 and 3260).
    local: 	#<Object>	false
    	#Local represents directly-attached storage with node affinity
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. It applies only when the Path is a block device.
        	#Must be a filesystem type supported by the host operating system. Ex.
        	#"ext4", "xfs", "ntfs". The default value is to auto-select a fileystem if
        	#unspecified.
        path: placeholder	#<string> -required-	false
        	#The full path to the volume on the node. It can be either a directory or
        	#block device (disk, partition, ...).
    mountOptions: 	#<[]string>	false
        - placeholder
    	#A list of mount options, e.g. ["ro", "soft"]. Not validated - mount will
    	#simply fail if one is invalid. More info:
    	#https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
    nfs: 	#<Object>	false
    	#NFS represents an NFS mount on the host. Provisioned by an admin. More
    	#info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        path: placeholder	#<string> -required-	false
        	#Path that is exported by the NFS server. More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#nfs
        readOnly: false	#<boolean>	false
        	#ReadOnly here will force the NFS export to be mounted with read-only
        	#permissions. Defaults to false. More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#nfs
        server: placeholder	#<string> -required-	false
        	#Server is the hostname or IP address of the NFS server. More info:
        	#https://kubernetes.io/docs/concepts/storage/volumes#nfs
    nodeAffinity: 	#<Object>	false
    	#NodeAffinity defines constraints that limit what nodes this volume can be
    	#accessed from. This field influences the scheduling of pods that use this
    	#volume.
        required: 	#<Object>	false
        	#Required specifies hard node constraints that must be met.
            nodeSelectorTerms: 	#<[]Object> -required-	false
            	#Required. A list of node selector terms. The terms are ORed.
                - matchExpressions: 	#<[]Object>	false
                	#A list of node selector requirements by node's labels.
                    - key: placeholder	#<string> -required-	false
                    	#The label key that the selector applies to.
                      operator: placeholder	#<string> -required-	false
                    	#Represents a key's relationship to a set of values. Valid operators are In,
                    	#NotIn, Exists, DoesNotExist. Gt, and Lt.
                      values: 	#<[]string>	false
                        - placeholder
                    	#An array of string values. If the operator is In or NotIn, the values array
                    	#must be non-empty. If the operator is Exists or DoesNotExist, the values
                    	#array must be empty. If the operator is Gt or Lt, the values array must
                    	#have a single element, which will be interpreted as an integer. This array
                    	#is replaced during a strategic merge patch.
                  matchFields: 	#<[]Object>	false
                	#A list of node selector requirements by node's fields.
                    - key: placeholder	#<string> -required-	false
                    	#The label key that the selector applies to.
                      operator: placeholder	#<string> -required-	false
                    	#Represents a key's relationship to a set of values. Valid operators are In,
                    	#NotIn, Exists, DoesNotExist. Gt, and Lt.
                      values: 	#<[]string>	false
                        - placeholder
                    	#An array of string values. If the operator is In or NotIn, the values array
                    	#must be non-empty. If the operator is Exists or DoesNotExist, the values
                    	#array must be empty. If the operator is Gt or Lt, the values array must
                    	#have a single element, which will be interpreted as an integer. This array
                    	#is replaced during a strategic merge patch.
    persistentVolumeReclaimPolicy: placeholder	#<string>	false
    	#What happens to a persistent volume when released from its claim. Valid
    	#options are Retain (default for manually created PersistentVolumes), Delete
    	#(default for dynamically provisioned PersistentVolumes), and Recycle
    	#(deprecated). Recycle must be supported by the volume plugin underlying
    	#this PersistentVolume. More info:
    	#https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming
    photonPersistentDisk: 	#<Object>	false
    	#PhotonPersistentDisk represents a PhotonController persistent disk attached
    	#and mounted on kubelets host machine
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. Must be a filesystem type supported by the host
        	#operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be
        	#"ext4" if unspecified.
        pdID: placeholder	#<string> -required-	false
        	#ID that identifies Photon Controller persistent disk
    portworxVolume: 	#<Object>	false
    	#PortworxVolume represents a portworx volume attached and mounted on
    	#kubelets host machine
        fsType: placeholder	#<string>	false
        	#FSType represents the filesystem type to mount Must be a filesystem type
        	#supported by the host operating system. Ex. "ext4", "xfs". Implicitly
        	#inferred to be "ext4" if unspecified.
        readOnly: false	#<boolean>	false
        	#Defaults to false (read/write). ReadOnly here will force the ReadOnly
        	#setting in VolumeMounts.
        volumeID: placeholder	#<string> -required-	false
        	#VolumeID uniquely identifies a Portworx volume
    quobyte: 	#<Object>	false
    	#Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
        group: placeholder	#<string>	false
        	#Group to map volume access to Default is no group
        readOnly: false	#<boolean>	false
        	#ReadOnly here will force the Quobyte volume to be mounted with read-only
        	#permissions. Defaults to false.
        registry: placeholder	#<string> -required-	false
        	#Registry represents a single or multiple Quobyte Registry services
        	#specified as a string as host:port pair (multiple entries are separated
        	#with commas) which acts as the central registry for volumes
        tenant: placeholder	#<string>	false
        	#Tenant owning the given Quobyte volume in the Backend Used with dynamically
        	#provisioned Quobyte volumes, value is set by the plugin
        user: placeholder	#<string>	false
        	#User to map volume access to Defaults to serivceaccount user
        volume: placeholder	#<string> -required-	false
        	#Volume is a string that references an already created Quobyte volume by
        	#name.
    rbd: 	#<Object>	false
    	#RBD represents a Rados Block Device mount on the host that shares a pod's
    	#lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
        fsType: placeholder	#<string>	false
        	#Filesystem type of the volume that you want to mount. Tip: Ensure that the
        	#filesystem type is supported by the host operating system. Examples:
        	#"ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        	#More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
        image: placeholder	#<string> -required-	false
        	#The rados image name. More info:
        	#https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        keyring: placeholder	#<string>	false
        	#Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring.
        	#More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        monitors: 	#<[]string> -required-	false
            - placeholder
        	#A collection of Ceph monitors. More info:
        	#https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        pool: placeholder	#<string>	false
        	#The rados pool name. Default is rbd. More info:
        	#https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        readOnly: false	#<boolean>	false
        	#ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to
        	#false. More info:
        	#https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        secretRef: 	#<Object>	false
        	#SecretRef is name of the authentication secret for RBDUser. If provided
        	#overrides keyring. Default is nil. More info:
        	#https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
        user: placeholder	#<string>	false
        	#The rados user name. Default is admin. More info:
        	#https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    scaleIO: 	#<Object>	false
    	#ScaleIO represents a ScaleIO persistent volume attached and mounted on
    	#Kubernetes nodes.
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. Must be a filesystem type supported by the host
        	#operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs"
        gateway: placeholder	#<string> -required-	false
        	#The host address of the ScaleIO API Gateway.
        protectionDomain: placeholder	#<string>	false
        	#The name of the ScaleIO Protection Domain for the configured storage.
        readOnly: false	#<boolean>	false
        	#Defaults to false (read/write). ReadOnly here will force the ReadOnly
        	#setting in VolumeMounts.
        secretRef: 	#<Object> -required-	false
        	#SecretRef references to the secret for ScaleIO user and other sensitive
        	#information. If this is not provided, Login operation will fail.
            name: placeholder	#<string>	false
            	#Name is unique within a namespace to reference a secret resource.
            namespace: placeholder	#<string>	false
            	#Namespace defines the space within which the secret name must be unique.
        sslEnabled: false	#<boolean>	false
        	#Flag to enable/disable SSL communication with Gateway, default false
        storageMode: placeholder	#<string>	false
        	#Indicates whether the storage for a volume should be ThickProvisioned or
        	#ThinProvisioned. Default is ThinProvisioned.
        storagePool: placeholder	#<string>	false
        	#The ScaleIO Storage Pool associated with the protection domain.
        system: placeholder	#<string> -required-	false
        	#The name of the storage system as configured in ScaleIO.
        volumeName: placeholder	#<string>	false
        	#The name of a volume already created in the ScaleIO system that is
        	#associated with this volume source.
    storageClassName: placeholder	#<string>	false
    	#Name of StorageClass to which this persistent volume belongs. Empty value
    	#means that this volume does not belong to any StorageClass.
    storageos: 	#<Object>	false
    	#StorageOS represents a StorageOS volume that is attached to the kubelet's
    	#host machine and mounted into the pod More info:
    	#https://examples.k8s.io/volumes/storageos/README.md
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. Must be a filesystem type supported by the host
        	#operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be
        	#"ext4" if unspecified.
        readOnly: false	#<boolean>	false
        	#Defaults to false (read/write). ReadOnly here will force the ReadOnly
        	#setting in VolumeMounts.
        secretRef: 	#<Object>	false
        	#SecretRef specifies the secret to use for obtaining the StorageOS API
        	#credentials. If not specified, default values will be attempted.
            apiVersion: placeholder	#<string>	false
            	#API version of the referent.
            fieldPath: placeholder	#<string>	false
            	#If referring to a piece of an object instead of an entire object, this
            	#string should contain a valid JSON/Go field access statement, such as
            	#desiredState.manifest.containers[2]. For example, if the object reference
            	#is to a container within a pod, this would take on a value like:
            	#"spec.containers{name}" (where "name" refers to the name of the container
            	#that triggered the event) or if no container name is specified
            	#"spec.containers[2]" (container with index 2 in this pod). This syntax is
            	#chosen only to have some well-defined way of referencing a part of an
            	#object.
            kind: placeholder	#<string>	false
            	#Kind of the referent. More info:
            	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            name: placeholder	#<string>	false
            	#Name of the referent. More info:
            	#https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            namespace: placeholder	#<string>	false
            	#Namespace of the referent. More info:
            	#https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
            resourceVersion: placeholder	#<string>	false
            	#Specific resourceVersion to which this reference is made, if any. More
            	#info:
            	#https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            uid: placeholder	#<string>	false
            	#UID of the referent. More info:
            	#https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
        volumeName: placeholder	#<string>	false
        	#VolumeName is the human-readable name of the StorageOS volume. Volume names
        	#are only unique within a namespace.
        volumeNamespace: placeholder	#<string>	false
        	#VolumeNamespace specifies the scope of the volume within StorageOS. If no
        	#namespace is specified then the Pod's namespace will be used. This allows
        	#the Kubernetes name scoping to be mirrored within StorageOS for tighter
        	#integration. Set VolumeName to any name to override the default behaviour.
        	#Set to "default" if you are not using namespaces within StorageOS.
        	#Namespaces that do not pre-exist within StorageOS will be created.
    volumeMode: placeholder	#<string>	false
    	#volumeMode defines if a volume is intended to be used with a formatted
    	#filesystem or to remain in raw block state. Value of Filesystem is implied
    	#when not included in spec.
    vsphereVolume: 	#<Object>	false
    	#VsphereVolume represents a vSphere volume attached and mounted on kubelets
    	#host machine
        fsType: placeholder	#<string>	false
        	#Filesystem type to mount. Must be a filesystem type supported by the host
        	#operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be
        	#"ext4" if unspecified.
        storagePolicyID: placeholder	#<string>	false
        	#Storage Policy Based Management (SPBM) profile ID associated with the
        	#StoragePolicyName.
        storagePolicyName: placeholder	#<string>	false
        	#Storage Policy Based Management (SPBM) profile name.
        volumePath: placeholder	#<string> -required-	false
        	#Path that identifies vSphere volume vmdk
status: 	#<Object>	false
	#Status represents the current information/status for the persistent volume.
	#Populated by the system. Read-only. More info:
	#https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
    message: placeholder	#<string>	false
    	#A human-readable message indicating details about why the volume is in this
    	#state.
    phase: placeholder	#<string>	false
    	#Phase indicates if a volume is available, bound to a claim, or released by
    	#a claim. More info:
    	#https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
    reason: placeholder	#<string>	false
    	#Reason is a brief CamelCase string that describes any failure and is meant
    	#for machine parsing and tidy display in the CLI.
